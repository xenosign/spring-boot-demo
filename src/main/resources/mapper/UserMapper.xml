<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tetz.spring_boot_demo.repository.UserMapperRepository">
    <!-- 모든 사용자 검색 -->
    <select id="findAll" resultType="com.tetz.spring_boot_demo.entity.User">
        SELECT * FROM users
    </select>

    <!-- 사용자 이름으로 사용자 찾기 -->
    <select id="findByUsername" parameterType="string" resultType="com.tetz.spring_boot_demo.entity.User">
        SELECT * FROM users WHERE username = #{username}
    </select>

    <!-- 이메일로 사용자 찾기 -->
    <select id="findByEmail" parameterType="string" resultType="com.tetz.spring_boot_demo.entity.User">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <!-- 이름으로 사용자 목록 찾기 -->
    <select id="findByName" parameterType="string" resultType="com.tetz.spring_boot_demo.entity.User">
        SELECT * FROM users WHERE name = #{name}
    </select>

    <!-- 사용자 이름이 특정 패턴과 일치하는 사용자 목록 찾기 -->
    <select id="findByUsernameLike" parameterType="string" resultType="com.tetz.spring_boot_demo.entity.User">
        SELECT * FROM users WHERE username LIKE #{pattern}
    </select>

    <!-- 특정 날짜 이후에 생성된 사용자 목록 찾기 -->
    <select id="findUsersCreatedAfter" parameterType="java.time.LocalDateTime" resultType="com.tetz.spring_boot_demo.entity.User">
        SELECT * FROM users WHERE created_at > #{date}
    </select>

    <!-- 사용자 이름 업데이트 -->
    <update id="updateUsername">
        UPDATE users SET name = #{name} WHERE id = #{id}
    </update>

    <!-- 사용자 삭제 (ID로) -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <!-- 모든 사용자 수 계산 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM users
    </select>
</mapper>